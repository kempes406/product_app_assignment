security:
    providers:
       backend_users:
            memory:
                users:
                    admin: { password: '$argon2id$v=19$m=65536,t=4,p=1$V5FKomNxWf4MbNb2d4AMfQ$mAWm5brKdsoR4osO/cEpoq6U1phERxwnHa1N6iRLzrA', roles: ['ROLE_USER','ROLE_ADMIN'] }
                    test_user: { password: '$argon2id$v=19$m=65536,t=4,p=1$V5FKomNxWf4MbNb2d4AMfQ$mAWm5brKdsoR4osO/cEpoq6U1phERxwnHa1N6iRLzrA', roles: ['ROLE_USER'] }
    encoders:
         Symfony\Component\Security\Core\User\User: 'auto'
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true

            form_login:
                check_path: security_login
                login_path: security_login
                default_target_path: _index

            logout:
                path: security_logout
                target: security_login
                invalidate_session: true
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/product, roles: IS_AUTHENTICATED_REMEMBERED }
         - { path: ^/sales, roles: IS_AUTHENTICATED_REMEMBERED }

    role_hierarchy:
        ROLE_ADMIN: ROLE_USER
